clear
close all,
clc;
[pic,map]=imread('C:\Users\Dell\Desktop\sixth assignment\lena.bmp');
map=ind2gray(pic,map);
pic=double(pic);
m=size(pic,1);    %矩阵大小m*n
n=size(pic,2);
m1=2*m;n1=2*n;
zaodft=pic;       %噪声dft
h=pic;            %噪声系数
%place center in the middle n1/2,m1/2
for x=1:m
    for y=1:n
        pic(x,y)=pic(x,y)*(-1)^(x+y);
    end
end

dftpic=fft2(pic); %原图dft

%噪声参数
a=0.1;
b=0.1;
t=1;

%求噪声dft
for u=1:m
    for v=1:n
       h(u,v)=t*sin(pi*(u*a+v*b))*exp(-1i*pi*(u*a+v*b))/(pi*(u*a+v*b));  
       zaodft(u,v)=dftpic(u,v)*h(u,v);
    end
end

zaodft=ifft2(zaodft); %噪声图像
zaotu=zeros(m,n);
for x=1:m
    for y=1:n
        zaotu(x,y)=zaodft(x,y)*(-1)^(x+y);
    end
end
zaotu=zaotu.*(255/max(max(zaotu)));
mean=0;           %高斯噪声均值
sigma=10;         %高斯噪声标准差
yita=0;           %高斯噪声能量
for i=1:m
    for j=1:n
       gauss=normrnd(mean,sigma);
       zaotu(i,j)=zaotu(i,j)+gauss;
       yita=yita+gauss^2;
    end
end
zaotu=real(zaotu);
zaotu=uint8(zaotu);
subplot(2,2,3)
imshow(zaotu)
title('加噪图片')
zaotu=double(zaotu);

%place center in the middle n1/2,m1/2
for x=1:m
    for y=1:n
        zaotu(x,y)=zaotu(x,y)*(-1)^(x+y);
    end
end
dftdong=fft2(zaotu);
fvie=zeros(m,n);
dftvie=zeros(m,n);

plwei=0.000001;
k=0.000002;
dftr=zeros(m,n);
dftrv=zeros(m,n);
while(plwei>=0.00000001)
for u=1:m
    for v=1:n
        dftvie(u,v)=dftdong(u,v)*conj(h(u,v))/(conj(h(u,v))*h(u,v)+k);
        dftrv(u,v)=dftdong(u,v)-h(u,v)*dftvie(u,v);
    end
end
frv=ifft2(dftrv);
frv=real(frv);
chazhiwei=yita;                          %求逼近
for x=1:m
    for y=1:n
        chazhiwei=chazhiwei-frv(x,y)^2;
    end
end
 plwei=plwei/2;
    if(chazhiwei<0)
        k=k-plwei;
    else if(chazhiwei>=0)
        k=k+plwei;
        end
    end   
end

%维纳滤波
for u=1:m
    for v=1:n
       
    end
end
fvie=ifft2(dftvie);
for x=1:m
    for y=1:n
        fvie(x,y)=fvie(x,y)*(-1)^(x+y);
    end
end

fvie=fvie.*(255/max(max(fvie)));
fvie=real(fvie);
fvie=uint8(fvie);
subplot(2,2,1)
imshow(fvie)
title('维纳滤波结果')

dftsqu=zeros(m,n);
%最小二乘滤波
p=[0 -1 0;-1 4 -1; 0 -1 0];
pkuo=zeros(m,n);
for i=1:3
    for j=1:3
        pkuo(m/2-2+i,n/2-2+j)=p(i,j)*(-1)^(i+j);
    end
end
puv=fft2(pkuo);
plus=0.000001;
r=0.000006;
while(plus>=0.00000001)
for u=1:m
    for v=1:n
        dftsqu(u,v)=dftdong(u,v)*conj(h(u,v))/(conj(h(u,v))*h(u,v)+(r*conj(puv(u,v))*puv(u,v)));
        dftr(u,v)=dftdong(u,v)-h(u,v)*dftsqu(u,v);
    end
end
fr=ifft2(dftr);
fr=real(fr);
chazhiyue=yita;                          %求逼近
for x=1:m
    for y=1:n
        chazhiyue=chazhiyue-fr(x,y)^2;
    end
end
 plus=plus/2;
    if(chazhiyue<0)
        r=r-plus;
    else if(chazhiyue>=0)
        r=r+plus;
        end
    end   
end
fsqu=ifft2(dftsqu);
for x=1:m
    for y=1:n
        fsqu(x,y)=fsqu(x,y)*(-1)^(x+y);
    end
end
fsqu=fsqu.*(255/max(max(fsqu)));
fsqu=uint8(real(fsqu));
subplot(2,2,2)
imshow(fsqu)
title('约束最小二乘滤波结果')
chazhiwei
chazhiyue